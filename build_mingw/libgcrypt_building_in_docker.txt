entweder docker: 
docker pull debian
docker run -it debian bash

---
oder vagrant vm:
vagrant init debian/testing64
vagrant up
vagrant ssh

---

apt install mingw-w64

test compiler version:

x86_64-w64-mingw32-g++ --version

compile a hello world: 
x86_64-w64-mingw32-g++ hello.cpp

install git and other build tools (gcc is required to build a native code preprocessor-tool for gpgerror!):

apt install build-essential
apt install git autoconf gettext

git clone git://git.gnupg.org/libgpg-error.git
cd libgpg-error
./autogen.sh
./autogen.sh --build-w32
make
make install
cp src/gpg-error-config ~/w32root/bin/gpg-error-config

cd ..

git clone git://git.gnupg.org/libgcrypt.git
cd libgcrypt
./autogen.sh
./autogen.sh --build-w32
make
make install

cd ..

git clone https://github.com/fltk/fltk.git

# make sure that the project folder is not already configured:
rm -rf CMakeCache.txt

#create a cmake toolchain files according to fltk/README.cmake

mkdir mingw32
cd mingw32

# compile 32 bit version:
cmake -DCMAKE_TOOLCHAIN_FILE=../cmake_toolchain_file_32bit ..


# compile a statically linked version of your windows executable:
# -static

i686-w64-mingw32-g++ -static hello.cpp 

